<!-- <?xml version="1.0" encoding="UTF-8"?> -->
<!DOCTYPE mapper PUBLIC	"-//mybatis.org//DTD Mapper 3.0//EN"
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd"
>


<!-- @Alias(value="emp") -->
<mapper namespace="com.my.cab.dao.EmpDAO">

	<insert id="empJoin" parameterType="emp">
		INSERT INTO employee (
        emp_no,
        dept_no,
        title_no,
        emp_password,
        emp_name,
        emp_email,
        emp_employment_status,
        emp_add,
        emp_extension_number,
        emp_bday,
        emp_level
    ) VALUES (
        #{emp_no},
        #{dept_no},
        #{title_no},
        #{emp_password},
        #{emp_name},
        #{emp_email},
        #{emp_employment_status},
        #{emp_add},
        #{emp_extension_number},
        #{emp_bday},
        #{emp_level}
    )
	</insert>
	
	<insert id="accJoin" parameterType="emp">
		INSERT INTO account(acc_no,emp_no,bank_name,acc_name) 
		VALUES (#{acc_no},#{emp_no},#{bank_name},#{acc_name})
	</insert>
	
	<select id="overlay" resultType="int">
		select count(emp_email) from employee where emp_email = #{param1}
   </select>
   
    <select id="getLastEmpNo" resultType="int" parameterType="int">
        SELECT COALESCE(MAX(SUBSTRING(emp_no, 2)), 0) AS latestEmpNo
        FROM employee
        WHERE SUBSTRING(emp_no, 1, 1) = #{deptNo}
    </select>
    
    <select id="getEmpList" resultType="emp" parameterType="search">
    SELECT e.emp_no, e.emp_name, t.title_name, d.dept_name, e.emp_employment_status
	FROM employee e 
	JOIN department d ON e.dept_no = d.dept_no 
	JOIN title t ON e.title_no = t.title_no
    <where>
    		<if test="filterForSearch != null and filterForSearch != ''">
                <choose>
                	<when test="filterForSearch == 'emp_no'">
                		e.emp_no LIKE CONCAT('%', #{searchText}, '%')
                	</when>
                	<when test="filterForSearch == 'emp_name'">
                		e.emp_name LIKE CONCAT('%', #{searchText}, '%')
                	</when>
                	<when test="filterForSearch == 'title_name'">
                		t.title_name LIKE CONCAT('%', #{searchText}, '%')
                	</when>
                	<when test="filterForSearch == 'dept_name'">
                		d.dept_name LIKE CONCAT('%', #{searchText}, '%')
                	</when>
                </choose>
            </if>
            <if test="filterIsRetired != null and filterIsRetired !=  ''">
                AND e.emp_employment_status = #{filterIsRetired}
            </if>
        </where>
        <choose>
            <when test="sortColumn != null and sortColumn == 'emp-no'">
                ORDER BY e.emp_no
            </when>
            <when test="sortColumn != null and sortColumn == 'emp-name'">
                ORDER BY e.emp_name
            </when>
            <when test="sortColumn != null and sortColumn == 'title-name'">
                ORDER BY t.title_name
            </when>
            <when test="sortColumn != null and sortColumn == 'dept-name'">
                ORDER BY d.dept_name
            </when>
            <when test="sortColumn != null and sortColumn == 'employment-status'">
                ORDER BY e.emp_employment_status
            </when>
            <otherwise>
                ORDER BY e.emp_no
            </otherwise>
        </choose>
        <choose>
            <when test="sortOrder != null and sortOrder == 'desc'">
                DESC
            </when>
            <when test="sortOrder != null and sortOrder == 'asc'">
                ASC
            </when>
        </choose>
        LIMIT #{pageSize} OFFSET #{page}
    </select>
    
     <select id="getEmpTotal" resultType="int" parameterType="search">
    SELECT COUNT(e.emp_no)
	FROM employee e 
	JOIN department d ON e.dept_no = d.dept_no 
	JOIN title t ON e.title_no = t.title_no
    <where>
    		<if test="filterForSearch != null and filterForSearch != ''">
                <choose>
                	<when test="filterForSearch == 'emp_no'">
                		e.emp_no LIKE CONCAT('%', #{searchText}, '%')
                	</when>
                	<when test="filterForSearch == 'emp_name'">
                		e.emp_name LIKE CONCAT('%', #{searchText}, '%')
                	</when>
                	<when test="filterForSearch == 'title_name'">
                		t.title_name LIKE CONCAT('%', #{searchText}, '%')
                	</when>
                	<when test="filterForSearch == 'dept_name'">
                		d.dept_name LIKE CONCAT('%', #{searchText}, '%')
                	</when>
                </choose>
            </if>
            <if test="filterIsRetired != null and filterIsRetired !=  ''">
                AND e.emp_employment_status = #{filterIsRetired}
            </if>
        </where>
    </select>
    
    



</mapper>